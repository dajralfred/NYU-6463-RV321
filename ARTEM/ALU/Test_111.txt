FCEE0E13 addi x28, x28, -50	//
032E8E93 addi x29, x29, 50	//
064F0F13 addi x30, x30, 100	//
00000F93 addi x31, x0,  0	//
01CEA333 slt  x6,  x29, x28	// Expected output X"00000000"
01DE23B3 slt  x7,  x28, x29	// Expected output X"00000001"
000FA433 slt  x8,  x31, x0	// Expected output X"00000000"
01EEB4B3 sltu x9,  x29, x30	// Expected output X"00000001"
01FE3533 sltu x10, x28, x31	// Expected output X"00000000"
01EFB5B3 sltu x11, x31, x30	// Expected output X"00000001"
01DE4633 xor  x12, x28, x29	// Expected output X"FFFFFFFC"
01EFC6B3 xor  x13, x31, x30	// Expected output X"00000064"
FDE008E3 beq  x0,  x30, -48	// Jump to the beging of the code if true, otherwise go to the next instr
0040006F jal  x0,  12
00B00B13 addi x22, x0,  11	// This instruction should be scipped
416F0BB3 sub  x23, x30, x22	// This instruction should be scipped
004D20B7 lui  x1,  1234		// Places the value X"004D2000" in the x1
1F9080E7 jalr ra,  x1,  505	// 
